#!/usr/bin/env python
import argparse
import sys
import os
import re
import json
from subprocess import check_output

def parse_args():
  pass

def main(args=None):
    # real json file path
    __location__ = os.path.realpath(
        os.path.join(os.getcwd(), os.path.dirname(__file__)))

    # Collect the parameters
    commit_msg_filepath = sys.argv[1]

    # Figure out which branch we're on
    branch = check_output(['git', 'symbolic-ref', '--short', 'HEAD']).strip()
    print("commit-msg: On branch '%s'") % branch

    # read commit
    with open(commit_msg_filepath, 'r') as f:
        content = f.read()

    # Check the commit message if we're on an issue branch
    if branch.startswith('feature/'):
        print("commit-msg: Oh hey, it's a feature branch.")
        result = re.match('feature/(.*)', branch)
        issue_number = result.group(1)
        required_message = "ISSUE- #%s" % issue_number
        if not content.startswith(required_message):
            print("commit-msg: ERROR! The commit message must start with '%s'" % required_message)
            sys.exit(1)

    data = {}
    with open(os.path.join(__location__, 'data.json')) as json_file:
        data = json.load(json_file)
        data['commit_data']['content'] = content

    with open(os.path.join(__location__, 'data.json'), 'w') as outfile:
        json.dump(data, outfile)
    pass
    # pass

if __name__ == "__main__":
  args = parse_args()
  main(args)
